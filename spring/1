객체지향프로그래밍

객체지향의 꽃은 다형성
 
다형성
-컴포넌트를 쉽고 유연하고,변경이 용이함
-클라이언트에 영향을 주지않고 변경가능
-인터페이스를 안정적으로 잘 설계하는 것이 중요


SOLID
단일책임원칙
-하나의 클래스는 하나의 책임만 가져야한다.
--이떄 변경사항이 있을때 파급효과가 적으면 단일책임원칙을 잘 따랐다고 볼 수 있다.
리스코프치환원칙
-인터페이스가 정해진 규약을 모두 지켜야함
인터페이스분리원칙
-인터페이스를 분리하였을 경우 목적와 대체가능성이 높아짐
의존관계역전원칙
-구현코드말고 인터페이스에 의존해야함 그래야 변경이 쉬워짐